import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;

import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package tristanmod10week2frames;

/**
 *
 * @author John
 */
public class otherFrame extends javax.swing.JFrame {

    /**
     * Creates new form otherFrame
     */
    public otherFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddress = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        lblContactNo = new javax.swing.JLabel();
        tfSurname = new javax.swing.JTextField();
        lblChildrenEnrolled = new javax.swing.JLabel();
        tfTeacherID = new javax.swing.JTextField();
        tfNumChildren = new javax.swing.JTextField();
        tfContactNo = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        tfAddress = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        tfParentID = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        lblTeacherID = new javax.swing.JLabel();
        lblParentID = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        tfPassword = new javax.swing.JTextField();
        tfUsername = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblAddress.setText("Address");

        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        lblContactNo.setText("Contact No");

        lblChildrenEnrolled.setText("Children Enrolled");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblName.setText("Name");

        lblSurname.setText("Surname");

        lblTeacherID.setText("Teacher ID");

        lblParentID.setText("Parent ID");

        lblUsername.setText("Username");

        lblPassword.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblContactNo)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfNumChildren)
                                .addComponent(tfContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblChildrenEnrolled)
                            .addComponent(lblName)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfAddress)
                                .addComponent(lblSurname)
                                .addComponent(lblAddress)
                                .addComponent(tfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblUsername))))
                    .addComponent(btnInsert))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblParentID)
                        .addComponent(lblTeacherID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfTeacherID)
                        .addComponent(tfParentID, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(tfPassword, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(lblSurname)
                    .addComponent(lblTeacherID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTeacherID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblParentID)
                    .addComponent(lblAddress)
                    .addComponent(lblContactNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfParentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChildrenEnrolled)
                    .addComponent(lblUsername)
                    .addComponent(lblPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNumChildren, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate))
                .addGap(29, 29, 29))
        );

        btnUpdate.setVisible(false);
        lblTeacherID.setVisible(false);
        tfTeacherID.setVisible(false);
        lblParentID.setVisible(false);
        tfParentID.setVisible(false);

        switch (Mod10Week2Sprint.table) {
            case "parent_tbl":
                lblChildrenEnrolled.setVisible(true);
                tfNumChildren.setVisible(true);
                
                //lblParentID.setVisible(true);
                //tfParentID.setVisible(true);
                break;
            case "teacher_tbl":
                lblChildrenEnrolled.setVisible(false);
                tfNumChildren.setVisible(false);
                //lblTeacherID.setVisible(true);
                //tfTeacherID.setVisible(true);
                
                break;
            default:
                break;
        }


        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:

        tableInsertRecords();
        OptionFrame.tablePrintRecords("default");
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

       
                tableUpdateRecords();
            

        

    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(otherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(otherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(otherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(otherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new otherFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblChildrenEnrolled;
    private javax.swing.JLabel lblContactNo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblParentID;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JLabel lblTeacherID;
    private javax.swing.JLabel lblUsername;
    private static javax.swing.JTextField tfAddress;
    private static javax.swing.JTextField tfContactNo;
    private static javax.swing.JTextField tfName;
    private static javax.swing.JTextField tfNumChildren;
    private static javax.swing.JTextField tfParentID;
    private static javax.swing.JTextField tfPassword;
    private static javax.swing.JTextField tfSurname;
    private static javax.swing.JTextField tfTeacherID;
    private static javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

        ////insert TRUE

        public static void tableInsertRecords(){
            Connection conn = null;
    
            String sql = "";
                //learner + parent
                String names = "";
                String surname = "";
                //parent
                String userName = "";
                String passWord = "";
                String address = "";
                String contactNo = "";
                int numChildren = 0;
                //learner
                /*String dob = "";
                String gender = "";
                int grade = 0;
                int parentID = 0;*/
    
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + Mod10Week2Sprint.databaseName,"root","root");
    
    
                switch (Mod10Week2Sprint.table) {
                    /*ase "learner_tbl":
    
                    parentID = Integer.valueOf(tfParentID.getText());
    
                    if (Mod10Week2Sprint.isNull(String.valueOf(parentID)) == true) {
                        return;
                    }
    
                    names = tfName.getText();
    
                    if (Mod10Week2Sprint.isNull(names) == true) {
                        return;
                    }
    
                    surname = "";//readInSurname("learner");
    
                    if (Mod10Week2Sprint.isNull(surname) == true) {
                        return;
                    }
    
                    dob = "";//readInBirthdate();
    
                    if (Mod10Week2Sprint.isNull(dob) == true) {
                        return;
                    }
    
                    gender = "";//readInGender();
    
                    if (Mod10Week2Sprint.isNull(gender) == true) {
                        return;
                    }
    
                    grade = 0;//readInGrade();
    
                    if (Mod10Week2Sprint.isNull(String.valueOf(grade)) == true) {
                        return;
                    }
    
                    sql = "INSERT INTO learner_tbl( parent_id, names, last_name, date_of_birth, gender, grade ) VALUES('" + parentID +
                    "','" + names +
                    "','"+ surname +"','"+ dob +"','"+ gender +"','"+ grade +"')";
    
                        break;
                    */
                    case "parent_tbl":
    
                        userName = tfUsername.getText();
    
                        if (Mod10Week2Sprint.isNull(userName) == true) {
                            return;
                        }
    
                        passWord = tfPassword.getText();
    
                        if (Mod10Week2Sprint.isNull(passWord) == true) {
                            return;
                        }
    
                        names = tfName.getText();
    
                        if (Mod10Week2Sprint.isNull(names) == true) {
                            return;
                        }
    
                        surname = tfSurname.getText();
    
                        if (Mod10Week2Sprint.isNull(surname) == true) {
                            return;
                        }
    
                        address = tfAddress.getText();
    
                        if (Mod10Week2Sprint.isNull(address) == true) {
                            return;
                        }
    
                        contactNo = tfContactNo.getText();
    
                        if (Mod10Week2Sprint.isNull(contactNo) == true) {
                            return;
                        }
    
                        numChildren = Integer.valueOf(tfNumChildren.getText());
    
                        if (Mod10Week2Sprint.isNull(String.valueOf(numChildren)) == true) {
                            return;
                        }
                        
                        sql = "INSERT INTO parent_tbl(names, last_name, address, contact_no, num_children, username, password) VALUES('"+ names +
                        "','"+ surname +"','"+ address +"','"+ contactNo +"','"+ numChildren +"','"+ userName +"','"+ passWord +"')";    
    
                        break;
                    case "teacher_tbl":
    
                    userName = tfUsername.getText();
    
                    if (Mod10Week2Sprint.isNull(userName) == true) {
                        return;
                    }

                    passWord = tfPassword.getText();

                    if (Mod10Week2Sprint.isNull(passWord) == true) {
                        return;
                    }

                    names = tfName.getText();

                    if (Mod10Week2Sprint.isNull(names) == true) {
                        return;
                    }

                    surname = tfSurname.getText();

                    if (Mod10Week2Sprint.isNull(surname) == true) {
                        return;
                    }

                    address = tfAddress.getText();

                    if (Mod10Week2Sprint.isNull(address) == true) {
                        return;
                    }

                    contactNo = tfContactNo.getText();

                    if (Mod10Week2Sprint.isNull(contactNo) == true) {
                        return;
                    }
    
                        
                        sql = "INSERT INTO teacher_tbl(names, last_name, address, contact_no, username, password) VALUES('"+ names +
                        "','"+ surname +"','"+ address +"','"+ contactNo +"','"+ userName +"','"+ passWord +"')"; 
    
                        break;
                }
    
    
                Statement stmt = conn.createStatement();
        
        
                stmt.executeUpdate(sql);
    
                conn.close();
    
            } catch (Exception e) {
                System.out.println("An error has occurred.");
                e.printStackTrace();
            }
    
        }
    
             ///update TRUE 


             public static void tableUpdateRecords(){
                Connection conn = null;
        
                String sql = "";
                    //learner + parent
                    String names = "";
                    String surname = "";
                    //parent
                    String userName = "";
                    String passWord = "";
                    String address = "";
                    String contactNo = "";
                    int numChildren = 0;
                    //learner
                    /*String dob = "";
                    String gender = "";
                    int grade = 0;
                    int parentID = 0;*/
        
                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + Mod10Week2Sprint.databaseName,"root","root");
        
        
                    switch (Mod10Week2Sprint.table) {
                        /*case "learner_tbl":
        
                        parentID = 0;
        
                        if (Mod10Week2Sprint.isNull(String.valueOf(parentID)) == true) {
                            return;
                        }
        
                        names = "";//readInNames("learner");
        
                        if (Mod10Week2Sprint.isNull(names) == true) {
                            return;
                        }
        
                        surname = "";//readInSurname("learner");
        
                        if (Mod10Week2Sprint.isNull(surname) == true) {
                            return;
                        }
        
                        dob = "";//readInBirthdate();
        
                        if (Mod10Week2Sprint.isNull(dob) == true) {
                            return;
                        }
        
                        gender = "";//readInGender();
        
                        if (Mod10Week2Sprint.isNull(gender) == true) {
                            return;
                        }
        
                        grade = 0;//readInGrade();
        
                        if (Mod10Week2Sprint.isNull(String.valueOf(grade)) == true) {
                            return;
                        }

        
                            sql = "UPDATE learner_tbl SET " + 
                            "parent_id = " + parentID + ", names = " + names + ", " + 
                            "last_name = " + surname + ", date_of_birth = " + dob + ", " + 
                            "gender = " + gender + ", grade = " + grade + " WHERE learner_id = " + Mod10Week2Sprint.recordID;
                        
        
                            break;*/
                        case "parent_tbl":
        
                            userName = tfUsername.getText();
        
                            if (Mod10Week2Sprint.isNull(userName) == true) {
                                return;
                            }
        
                            passWord = tfPassword.getText();
        
                            if (Mod10Week2Sprint.isNull(passWord) == true) {
                                return;
                            }
        
                            names = tfName.getText();
        
                            if (Mod10Week2Sprint.isNull(names) == true) {
                                return;
                            }
        
                            surname = tfSurname.getText();
        
                            if (Mod10Week2Sprint.isNull(surname) == true) {
                                return;
                            }
        
                            address = tfAddress.getText();
        
                            if (Mod10Week2Sprint.isNull(address) == true) {
                                return;
                            }
        
                            contactNo = tfContactNo.getText();
        
                            if (Mod10Week2Sprint.isNull(contactNo) == true) {
                                return;
                            }
        
                            numChildren = Integer.valueOf(tfNumChildren.getText());
        
                            if (Mod10Week2Sprint.isNull(String.valueOf(numChildren)) == true) {
                                return;
                            }
                     
        
                            sql = "UPDATE parent_tbl SET " + 
                            "names = " + names + ", " + 
                            "last_name = " + surname + ", address = " + address + ", " + 
                            "contact_no = " + contactNo + ", num_children = " + numChildren + 
                            ", username = " + userName + ", password = " + passWord + 
                            " WHERE parent_id = " + Mod10Week2Sprint.recordID;
                            break;
                        case "teacher_tbl":

                        names = tfName.getText();
        
                        if (Mod10Week2Sprint.isNull(names) == true) {
                            return;
                        }
    
                        surname = tfSurname.getText();
    
                        if (Mod10Week2Sprint.isNull(surname) == true) {
                            return;
                        }
    
                        address = tfAddress.getText();
    
                        if (Mod10Week2Sprint.isNull(address) == true) {
                            return;
                        }
    
                        contactNo = tfContactNo.getText();
    
                        if (Mod10Week2Sprint.isNull(contactNo) == true) {
                            return;
                        }
        
                            userName = tfUsername.getText();
        
                            if (Mod10Week2Sprint.isNull(userName) == true) {
                                return;
                            }
        
                            passWord = tfPassword.getText();
        
                            if (Mod10Week2Sprint.isNull(passWord) == true) {
                                return;
                            }
                            
                            sql = "UPDATE teacher_tbl SET " +
                            "names = " + names + ", " + 
                            "last_name = " + surname + ", address = " + address + ", " + 
                            "contact_no = " + contactNo + 
                            "username = " + userName + ", " + 
                            "password = " + passWord + " WHERE teacher_id = " + Mod10Week2Sprint.recordID;
        
                            break;
                    }
        
        
                    Statement stmt = conn.createStatement();
            
            
                    stmt.executeUpdate(sql);
        
                    conn.close();
        
                } catch (Exception e) {
                    System.out.println("An error has occurred.");
                    e.printStackTrace();
                }
        
            }
        
        

}
